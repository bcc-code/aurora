name: BCC Online

on:
  push:
    branches: [ develop, master ]
    tags: [ v* ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENV: DEV
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Set ENV to DEV
      if: endsWith(github.ref, '/develop')
      run: |
        echo "ENVIRONMENT=DEV" >> $GITHUB_ENV
    - name: Set ENV to STAGE
      if: endsWith(github.ref, '/master')
      run: |
        echo "ENVIRONMENT=STAGE" >> $GITHUB_ENV
    - name: Set ENV to PROD
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "ENVIRONMENT=PROD" >> $GITHUB_ENV
    - name: Fix up files for CI
      run: |
        cp -v "firebase/functions/example.runtimeconfig.json" "firebase/functions/.runtimeconfig.json"
        cp -v "client/src/configs/config.json.template" "client/src/configs/config.json"
        sudo chmod 0666 client/src/configs/config.json
    - name: Replace config tokens
      uses: microsoft/variable-substitution@v1
      with:
        files: "**/config.json"
      env:
        auth0.clientSecret: ${{ secrets.AUTH0_CLIENT_SECRET }}
        api.baseUrl: ${{ secrets[format('{0}_API_BASE_URL', env.ENVIRONMENT)] }}
        api.baseUrlV2: ${{ secrets[format('{0}_API_BASE_URL_V2', env.ENVIRONMENT)] }}
        app.baseUrl: ${{ secrets[format('{0}_APP_BASE_URL', env.ENVIRONMENT)] }}
        app.name: ${{ format('BCC Online | {0}', env.ENVIRONMENT) }}
        firebase.apiKey: ${{ secrets[format('{0}_FIREBASE_API_KEY', env.ENVIRONMENT)] }}
        firebase.authDomain: ${{ secrets[format('{0}_FIREBASE_AUTH_DOMAIN', env.ENVIRONMENT)] }}
        firebase.databaseURL: ${{ secrets[format('{0}_FIREBASE_DATABASE_URL', env.ENVIRONMENT)] }}
        firebase.projectId: ${{ secrets[format('{0}_FIREBASE_PROJECT_ID', env.ENVIRONMENT)] }}
        firebase.storageBucket: ${{ secrets[format('{0}_FIREBASE_STORAGE_BUCKET', env.ENVIRONMENT)] }}
        firebase.messagingSenderId: ${{ secrets[format('{0}_FIREBASE_MESSAGING_SENDER_ID', env.ENVIRONMENT)] }}
        firebase.appId: ${{ secrets[format('{0}_FIREBASE_APP_ID', env.ENVIRONMENT)] }}
        firebase.measurementId: ${{ secrets[format('{0}_FIREBASE_MEASUREMENT_ID', env.ENVIRONMENT)] }}
        firebase.storageBaseUrl: ${{ secrets[format('{0}_FIREBASE_STORAGE_BASE_URL', env.ENVIRONMENT)] }}
    - name: Replace firebase.json tokens
      uses: microsoft/variable-substitution@v1
      with:
        files: "**/firebase.json"
      env:
        hosting.site: ${{ secrets[format('{0}_FIREBASE_PROJECT_ID', env.ENVIRONMENT)] }}
    - name: Run tests
      working-directory: ./firebase/functions
      run: |
        npm i
        npm test
    - name: Grant write permissions to config file
      run: |
        rm firebase/functions/.runtimeconfig.json
    - name: npm install and build (client)
      working-directory: ./client
      run: |
        npm ci
        npm run build
    - name: npm install and build (functions)
      working-directory: ./firebase/functions
      run: |
        npm ci
        npm run build
    - name: deploy to firebase
      uses: w9jds/firebase-action@master
      with:
        args: deploy --project ${{ secrets[format('{0}_FIREBASE_PROJECT_ID', env.ENVIRONMENT)] }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        PROJECT_PATH: ./firebase
