rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isServiceAccount() {
      return request.auth.token.email == "screens@bcc.online";
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/permissions/$(request.auth.token.personId));
    }

    function isPerson(personId) {
      return request.auth.token.personId == personId;
    }

    function isLoggedIn() {
      return request.auth != null;
    }

    function fieldsExist(required) {
      let allAllowedFields = required;
      return request.resource.data.keys().hasAll(required) &&
        request.resource.data.keys().hasOnly(allAllowedFields);
    }

    function isUpdatingFields(fields) {
      return request.resource.data.diff(resource.data).affectedKeys().hasAny(fields);
    }

    match /user-groups/bcc {
      allow read: if true;
      allow write: if false;

      match /users/{userId} {
        allow read: if isServiceAccount();
        allow read, update: if isAdmin() || isPerson(userId);
        allow write: if false;
      }
    }

    match /{documentId=**} {
      allow read, write: if isAdmin();
    }

    match /churches/{churchId} {
      allow read: if isLoggedIn();
    }

    match /competitions/{competitionId=**} {
      allow read: if isLoggedIn();
    }

    match /buk-games/{bukGameId=**} {
      allow read: if isLoggedIn();
    }

    match /configs/{configId=**} {
      allow read: if isLoggedIn();
    }

    match /templates/{templateId=**} {
      allow read: if isServiceAccount();
    }

    match /events/{eventId} {

      allow get: if isLoggedIn();

      match /checkins/{checkinId} {
        allow get: if isPerson(checkinId) || isPerson(resource.data.checkedInBy);
        allow list: if isServiceAccount();
        allow list, delete: if isAdmin();
      }
      match /gameboard/{gameboardId=**} {
        allow read: if isLoggedIn();
      }
      match /liveboard/{componentId=**} {
        allow read: if isLoggedIn();
      }

      match /program/{programId=**} {
        allow read: if isLoggedIn();
      }
      match /questions/{questionId=**} {
        allow read: if isLoggedIn();
      }
      match /inquiries-queue/{feedItemId=**} {
        allow read: if isServiceAccount();
      }
      match /feed-approved/{feedItemId=**} {
        allow read: if isServiceAccount();
      }
      match /feed-outgoing/{feedItemId} {

        match /private/{doc} {
            // There is techincally no reason for the person to read back their own id either
            // we just need to keep it as a reference
            allow read: if false;
        }

        allow read: if isServiceAccount() || isLoggedIn();
        allow list: if isServiceAccount() || isLoggedIn();
      }
      match /responses/{responseId=**} {
        allow read: if isServiceAccount() || isPerson(resource.data.personId);
      }
      match /screens/{screenId=**} {
        allow read, write: if isServiceAccount();
      }
    }
  }
}
